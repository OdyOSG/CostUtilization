% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EunomiaTestHelpers.R
\name{transformCostToCdmV5_5}
\alias{transformCostToCdmV5_5}
\title{Transform a Wide Cost Table to OMOP CDM v5.4+ Long Format}
\usage{
transformCostToCdmV5_5(
  connectionDetails,
  cdmDatabaseSchema = "main",
  sourceCostTable = "cost"
)
}
\arguments{
\item{connectionDetails}{An R object of type \code{ConnectionDetails} created using the
\code{DatabaseConnector} package.}

\item{cdmDatabaseSchema}{The name of the database schema that contains the OMOP CDM instance.
For Eunomia, this is typically "main".}

\item{sourceCostTable}{The name of the wide-format cost table to transform. Defaults to "cost".}
}
\value{
Invisibly returns \code{TRUE} upon successful completion. The function is called for its side effect of modifying the database.
}
\description{
Reads a wide-format \code{cost} table (typical of CDM v5.3 and earlier) from the database,
transforms it into the modern long format, backs up the original table, and inserts the
new long-format table.
}
\details{
This function is designed to work on a database that already contains a wide-format \code{cost} table,
such as one generated by \code{injectCostData()}. It performs a "wide-to-long" pivot on cost columns
(\code{total_charge}, \code{total_cost}, \code{paid_by_payer}, etc.), mapping each to a corresponding \code{cost_concept_id}.
It also populates new fields required by CDM v5.4+, such as \code{person_id} and \code{incurred_date}.

The original \code{cost} table will be renamed to \code{cost_v5_3_backup} before the new table is created.
}
\examples{
\dontrun{
connectionDetails <- Eunomia::getEunomiaConnectionDetails()
# First, ensure wide-format cost data exists:
injectCostData(connectionDetails = connectionDetails)

# Now, transform it to the modern long format:
transformCostToCdmV5_5(connectionDetails = connectionDetails)
}
}
