% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createCostOfCareSettings.R
\name{createCostOfCareSettings}
\alias{createCostOfCareSettings}
\title{Create Cost of Care Settings}
\usage{
createCostOfCareSettings(
  anchorCol = "cohort_start_date",
  startOffsetDays = 0L,
  endOffsetDays = 365L,
  restrictVisitConceptIds = NULL,
  eventFilters = NULL,
  microCosting = FALSE,
  costConceptId = 31973,
  currencyConceptId = 44818668,
  additionalCostConceptIds = NULL,
  cpiAdjustment = FALSE,
  cpiFilePath = NULL
)
}
\arguments{
\item{anchorCol}{Character; which cohort column anchors the analysis window.
One of \code{"cohort_start_date"} or \code{"cohort_end_date"}. Default: \code{"cohort_start_date"}.}

\item{startOffsetDays}{Integer; days to add to the anchor date for window start
(can be negative). Default: 0.}

\item{endOffsetDays}{Integer; days to add to the anchor date for window end.
Must be greater than \code{startOffsetDays}. Default: 365.}

\item{restrictVisitConceptIds}{Optional integer vector of visit concept IDs to restrict analysis.
If provided, only visits with these concept IDs are considered.}

\item{eventFilters}{Optional list of event filters (see Details). Each filter defines a set of
concepts by OMOP domain; if provided, they can be used to constrain qualifying events/visits.}

\item{microCosting}{Logical; if \code{TRUE}, performs line-level costing at the \code{visit_detail} level.
Requires \code{eventFilters}. Default: \code{FALSE}.}

\item{costConceptId}{Integer; concept ID for the cost type. Default: \code{31973} (charged).}

\item{currencyConceptId}{Integer; concept ID for the currency. Default: \code{44818668} (USD).}

\item{additionalCostConceptIds}{Optional integer vector of additional cost concept IDs to include.
These can be used by downstream SQL to widen the cost types considered.}

\item{cpiAdjustment}{Logical; if \code{TRUE}, adjust costs using CPI factors from \code{cpiFilePath}. Default: \code{FALSE}.}

\item{cpiFilePath}{Optional character path to a CPI adjustment table/file. Required if \code{cpiAdjustment = TRUE}.}
}
\value{
A \code{CostOfCareSettings} object (list with class) containing:
\itemize{
\item \code{anchorCol}, \code{startOffsetDays}, \code{endOffsetDays}
\item \code{hasVisitRestriction}, \code{restrictVisitConceptIds}
\item \code{hasEventFilters}, \code{eventFilters}, \code{nFilters}
\item \code{microCosting},
\item \code{costConceptId}, \code{currencyConceptId}, \code{additionalCostConceptIds}
\item \code{cpiAdjustment}, \code{cpiFilePath}
}
}
\description{
Create a validated settings object for the \code{calculateCostOfCare} analysis.
This is the recommended way to specify analysis parameters.
}
\details{
\strong{Event filters structure}

The \code{eventFilters} argument must be a list of lists, where each inner list has:
\itemize{
\item \code{name}: A unique character string for the filter.
\item \code{domain}: The OMOP domain (one of \code{"All"}, \code{"Drug"}, \code{"Condition"}, \code{"Procedure"},
\code{"Observation"}, \code{"Measurement"}, \code{"Device"}, \code{"Visit"}).
\item \code{conceptIds}: An integer vector of concept IDs (length \eqn{\ge} 1) or NULL if all domain names required.
}

\strong{CPI adjustment}

If \code{cpiAdjustment = TRUE}, you must provide \code{cpiFilePath}. Your pipeline should read this
into a table that exposes, at minimum, a \code{year} and an \code{adj_factor} column; downstream SQL
joins on the \code{year} extracted from cost dates. The function only validates the file path;
loading/attaching the table is left to the calling workflow.
}
